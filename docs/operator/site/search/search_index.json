{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Docs","text":"<p>Welcome to the documentation.  The code and chart is avalible at github.com.</p>"},{"location":"#getting-started","title":"Getting started","text":"<ul> <li>install</li> </ul> <pre><code>helm repo add sealed-age-operator \\\nhttps://callmewhatuwant.github.io/sealed-age-operator\nhelm install sealed-age-operator sealed-age-operator/age-secrets \\ \n--namespace sealed-age-system --create-namespace\n</code></pre> <ul> <li>check install</li> </ul> <pre><code>kubectl wait --for=condition=Ready pods --all -n sealed-age-system \n</code></pre> <ul> <li>uninstall</li> </ul> <pre><code>helm uninstall -n sealed-age-system age-secrets\nkubectl delete namespace sealed-age-system\n</code></pre>"},{"location":"#testing","title":"Testing","text":"<ul> <li>install age</li> </ul> <pre><code>sudo apt install age\n</code></pre> <ul> <li>get key</li> </ul> <pre><code>LATEST=$(kubectl get secrets -n sealed-age-system --no-headers -o custom-columns=\":metadata.name\" \\\n  | grep '^age-key-' | sort | tail -n1)\n\nkubectl get secret \"$LATEST\" -n sealed-age-system -o jsonpath='{.data.public}' | base64 --decode &amp;&amp; echo\n</code></pre> <ul> <li>create test file</li> </ul> <pre><code>echo test123 &gt; secret.txt\n</code></pre> <ul> <li>encrypt with ur public key</li> </ul> <pre><code>age --armor -r age1u4dtwstnutaytrfjea9jp3v9y0a8l9hh7rlgmehz9w63z0u3zuvquxhhhy secret.txt\n</code></pre> <ul> <li>create crd ressource </li> <li>crd has to be applied before doing that</li> </ul> <pre><code>kubectl apply -f kubectl apply -f https://raw.githubusercontent.com/callmewhatuwant/sealed-age-operator/main/config/crd/bases/security.age.io_sealedages.yaml\n</code></pre> <ul> <li>exmaple secret crd ressource</li> </ul> <pre><code>apiVersion: security.age.io/v1alpha1\nkind: SealedAge\nmetadata:\n  name: db-passwd\nspec:\n  encryptedData:\n    password: |\n      -----BEGIN AGE ENCRYPTED FILE-----\n      YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBWbHhqcGhyZ0ZSbXhQZXJ1\n      aU1kL1NmZjYyaU9JQXlQazBuekdmMk8ySkYwCkloMGJxR0lXVG0yM2FXV3hrT3BI\n      OXVwdzhrYWtGU0hwTUtLTHN5dzJBTGsKLS0tIEc0V1JmTUVpWkZuNGFGWXJJV3ow\n      cWZpL09JTnFCVFFZbXRFQUY2QTdTbm8KdkZOvCXRqENpCw9ncrVP+qzDBTKwntfi\n      ihgfMGuoy3Q37Dkqsw==\n      -----END AGE ENCRYPTED FILE-----\n</code></pre> <ul> <li>verify</li> </ul> <pre><code>kubectl get secret -n sealed-age-system\n</code></pre>"},{"location":"#helm-options","title":"Helm Options","text":"<pre><code>## name override\nfullnameOverride: sealed-age-controller\nsealedAgeController:\n\n  ## replicas for ha\n  replicas: 3\n\n  controller:\n    ## image\n    image:\n      repository: callmewhatuwant/age-secrets-operator\n      tag: 0.0.2\n    imagePullPolicy: IfNotPresent\n\n    ## resources\n    resources:\n      limits:\n        cpu: 200m\n        memory: 128Mi\n      requests:\n        cpu: 100m\n        memory: 64Mi\n\n    ## security\n    containerSecurityContext:\n      allowPrivilegeEscalation: false\n      capabilities:\n        drop:\n        - ALL\n      runAsNonRoot: true\n      runAsUser: 65532\n\n## prometheus\nmetricsService:\n  type: ClusterIP\n  ports:\n    - port: 8080\n      name: metrics\n      targetPort: 8080\n\n## monitor for prometheus\nServiceMonitor:\n  enabled: true\n  endpoints:\n    - port: metrics\n      interval: 30s \n      path: /metrics\n\n## job\nageKeyRotation:\n  schedule: \"0 0 1 * *\"\n\n  ## initial key\n  initialRun:\n    enabled: true\n\n  ## image for cron and init job\n  image:\n    repository: alpine\n    tag: \"3.20\"\n    pullPolicy: IfNotPresent\n</code></pre>"},{"location":"#support-me-if-u-want","title":"Support me if u want","text":"<p>BTC:</p> <pre><code>abcde\n</code></pre> <p>Solana:</p> <pre><code>abcde\n</code></pre>"}]}