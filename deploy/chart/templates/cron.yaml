apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "age-secrets.fullname" . }}-age-key-rotation
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "age-secrets.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.ageKeyRotation.schedule | quote }}
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "age-secrets.labels" . | nindent 12 }}
        spec:
          serviceAccountName: {{ include "age-secrets.fullname" . }}-job
          restartPolicy: OnFailure
          containers:
            - name: gen-age-key
              image: "{{ .Values.ageKeyRotation.image.repository }}:{{ .Values.ageKeyRotation.image.tag }}"
              imagePullPolicy: {{ .Values.ageKeyRotation.image.pullPolicy | default "IfNotPresent" }}
              command: ["/bin/sh","-c"]
              args:
                - |
                  set -euo pipefail

                  # Install required tools
                  # apk add --no-cache kubectl age

                  NS="{{ .Release.Namespace }}"
                  DATE="$(date +%Y-%m-%d-%H-%M)"
                  NAME="age-key-${DATE}"

                  # Skip if Secret already exists
                  if kubectl -n "$NS" get secret "$NAME" >/dev/null 2>&1; then
                    echo "Secret $NAME already exists â€“ skipping."
                    exit 0
                  fi

                  # Generate private/public key pair and clean comments
                  age-keygen -o /tmp/key.txt
                  sed -i '/^#/d' /tmp/key.txt
                  PUB="$(age-keygen -y < /tmp/key.txt | grep -v '^#')"

                  # Create Secret
                  kubectl -n "$NS" create secret generic "$NAME" \
                    --from-file=private=/tmp/key.txt \
                    --from-literal=public="$PUB"

                  # Label and annotate
                  kubectl -n "$NS" annotate secret "$NAME" active="true" --overwrite
                  kubectl -n "$NS" label secret "$NAME" app=age-key --overwrite
